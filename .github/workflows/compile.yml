on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  DATE: $(date +%FT%TZ)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE }}"

      - name: Building CSS & JavaScript
        run: |
          npx --package node-sass@latest node-sass --version
          npx --package node-sass@latest node-sass --include-path scss packages/csc/src/scss/common.scss packages/csc/dist/css/common.min.css --output-style compressed
          npx --package uglify-js@latest uglifyjs packages/csc/src/js/main.js -o packages/csc/dist/js/common.min.js -c -m

      - name: Commit files # transfer the new html files back into the repository
        run: |
          git config --local user.name "KagariSoft-dev "
          git add .
          git commit -m "üèóÔ∏è Files updated" -a
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true

      - name: Checkout
        uses: actions/checkout@v2.1.1
      - name: node
        uses: actions/setup-node@v2.4.2
        with:
          node-version: "${{ env.NODE }}"

      - name: Publish CSC
        run: npm publish --access public
        working-directory: ./packages/csc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN}}
      - name: Publish CSC React
        run: npm publish --access public
        working-directory: ./packages/csc-react
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN}}
